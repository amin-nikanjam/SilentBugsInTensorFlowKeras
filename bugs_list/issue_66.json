{
  "url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055",
  "repository_url": "https://api.github.com/repos/tensorflow/tensorflow",
  "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055/labels{/name}",
  "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055/comments",
  "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055/events",
  "html_url": "https://github.com/tensorflow/tensorflow/issues/34055",
  "id": 518969878,
  "node_id": "MDU6SXNzdWU1MTg5Njk4Nzg=",
  "number": 34055,
  "title": "model.reset_states() does not work for bidirectional-RNNs in tf.keras.",
  "user": {
    "login": "keithchugg",
    "id": 12243979,
    "node_id": "MDQ6VXNlcjEyMjQzOTc5",
    "avatar_url": "https://avatars.githubusercontent.com/u/12243979?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/keithchugg",
    "html_url": "https://github.com/keithchugg",
    "followers_url": "https://api.github.com/users/keithchugg/followers",
    "following_url": "https://api.github.com/users/keithchugg/following{/other_user}",
    "gists_url": "https://api.github.com/users/keithchugg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/keithchugg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/keithchugg/subscriptions",
    "organizations_url": "https://api.github.com/users/keithchugg/orgs",
    "repos_url": "https://api.github.com/users/keithchugg/repos",
    "events_url": "https://api.github.com/users/keithchugg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/keithchugg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 473172988,
      "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=",
      "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug",
      "name": "type:bug",
      "color": "159b2e",
      "default": false,
      "description": "Bug"
    },
    {
      "id": 1097546578,
      "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4",
      "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras",
      "name": "comp:keras",
      "color": "0052cc",
      "default": false,
      "description": "Keras related issues"
    },
    {
      "id": 1160540362,
      "node_id": "MDU6TGFiZWwxMTYwNTQwMzYy",
      "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/TF%202.0",
      "name": "TF 2.0",
      "color": "e79b38",
      "default": false,
      "description": "Issues relating to TensorFlow 2.0"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "qlzh727",
    "id": 5118881,
    "node_id": "MDQ6VXNlcjUxMTg4ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5118881?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qlzh727",
    "html_url": "https://github.com/qlzh727",
    "followers_url": "https://api.github.com/users/qlzh727/followers",
    "following_url": "https://api.github.com/users/qlzh727/following{/other_user}",
    "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions",
    "organizations_url": "https://api.github.com/users/qlzh727/orgs",
    "repos_url": "https://api.github.com/users/qlzh727/repos",
    "events_url": "https://api.github.com/users/qlzh727/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qlzh727/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "qlzh727",
      "id": 5118881,
      "node_id": "MDQ6VXNlcjUxMTg4ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5118881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qlzh727",
      "html_url": "https://github.com/qlzh727",
      "followers_url": "https://api.github.com/users/qlzh727/followers",
      "following_url": "https://api.github.com/users/qlzh727/following{/other_user}",
      "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions",
      "organizations_url": "https://api.github.com/users/qlzh727/orgs",
      "repos_url": "https://api.github.com/users/qlzh727/repos",
      "events_url": "https://api.github.com/users/qlzh727/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qlzh727/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-11-07T00:34:22Z",
  "updated_at": "2019-11-19T17:24:58Z",
  "closed_at": "2019-11-19T17:24:57Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): **YES**.\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): **macOS 10.14.6**\r\n- TensorFlow installed from (source or binary): **binary**\r\n- TensorFlow version (use command below): **2.0.0**\r\n- Python version: **3.7.4**\r\n- GPU model and memory: **none (MacBook Pro, Core i5, Iris Graphics 6100, 1.5 GB)**\r\n\r\n**Describe the current behavior**\r\nState handling in RNNs with a Bidirectional wrapper has changed in tf.keras from keras with TF 1.x.  In the old keras with TF 1.x, using `stateful=True` in a bidi-RNN had no effect -- i.e., all bidi-RNN models behaved as if  `stateful=False`.  Therefore `model.reset_states()` did not do anything.\r\n\r\nIn the new tf.keras, `stateful=True` in a bidi-RNN does have an effect -- the fwd-RNN is stateful and the bwd-RNN is stateful.  This is a good change IMO -- even though stateful bidi-RNNs are unusual, this is the best way to implement.  However, in tf.keras, the `model.reset_states()` does not do anything for bidi-RNN models (SimpleRNN, GRU, LSTM).  \r\n\r\n**Describe the expected behavior**\r\n\r\nFor the minimal example script provided below, here is the output:\r\n\r\n```\r\nFWD::\r\nnon_stateful: [ 1.   -0.5   0.25]\r\nstateful: [ 1.   -0.5   0.25]\r\ndelta: [0. 0. 0.]\r\nBWD::\r\nnon_stateful: [1. 0. 0.]\r\nstateful: [1. 0. 0.]\r\ndelta: [0. 0. 0.]\r\nFWD::\r\nnon_stateful: [ 1.   -0.5   0.25]\r\nstateful: [ 0.875   -0.4375   0.21875]\r\ndelta: [-0.125    0.0625  -0.03125]\r\nBWD::\r\nnon_stateful: [1. 0. 0.]\r\nstateful: [ 0.875  0.25  -0.5  ]\r\ndelta: [-0.125  0.25  -0.5  ]\r\n\r\n** RESETING STATES in STATEFUL MODEL **\r\n\r\nFWD::\r\nnon_stateful: [ 1.   -0.5   0.25]\r\nstateful: [ 0.890625   -0.4453125   0.22265625]\r\ndelta: [-0.109375    0.0546875  -0.02734375]\r\nBWD::\r\nnon_stateful: [1. 0. 0.]\r\nstateful: [ 0.890625  0.21875  -0.4375  ]\r\ndelta: [-0.109375  0.21875  -0.4375  ]\r\n```\r\n\r\nThe results after the **STATE RESET**  should be the same as the first set of results -- i.e., the last (third) set of results should produce the same result for the stateful and non-stateful models (same as the first set of results).  \r\n\r\n**Code to reproduce the issue**\r\n\r\n```python\r\nimport numpy as np\r\nTF2 = True\r\nif TF2:\r\n\t### currently, there is a bug in tf.keras: model.reset_states() does not work\r\n\tfrom tensorflow.keras.layers import Input, Dense, SimpleRNN, GRU, LSTM, Bidirectional\r\n\tfrom tensorflow.keras.models import Model\r\nelse:\r\n\t### in the old keras, bidi-RNNs with stateful=True behave smae as stateful=False\r\n\tfrom keras.layers import Input, Dense, SimpleRNN, GRU, LSTM, Bidirectional\r\n\tfrom keras.models import Model\r\n\r\nsequence_length = 3\r\nfeature_dim = 1\r\nfeatures_in = Input(batch_shape=(1, sequence_length, feature_dim)) \r\n\r\nrnn_out = Bidirectional( SimpleRNN(1, activation=None, use_bias=False, return_sequences=True, return_state=False, stateful=False))(features_in)\r\nstateless_model = Model(inputs=[features_in], outputs=[rnn_out])\r\n\r\nstateful_rnn_out = Bidirectional( SimpleRNN(1, activation=None, use_bias=False, return_sequences=True, return_state=False, stateful=True))(features_in)\r\nstateful_model = Model(inputs=features_in, outputs=stateful_rnn_out)\r\n\r\ntoy_weights = [ np.asarray([[1.0]], dtype=np.float32), np.asarray([[-0.5]], dtype=np.float32), np.asarray([[1.0]], dtype=np.float32), np.asarray([[-0.5]], dtype=np.float32)]\r\n\r\nstateless_model.set_weights(toy_weights)\r\nstateful_model.set_weights(toy_weights)\r\n\r\nx_in = np.zeros(sequence_length)\r\nx_in[0] = 1\r\nx_in = x_in.reshape( (1, sequence_length, feature_dim) )\r\n\r\ndef print_bidi_out(non_stateful_out, stateful_out):\r\n\tfb = ['FWD::', 'BWD::']\r\n\r\n\tfor i in range(2):\r\n\t\tprint(fb[i])\r\n\t\tprint(f'non_stateful: {non_stateful_out.T[i]}')\r\n\t\tprint(f'stateful: {stateful_out.T[i]}')\r\n\t\tprint(f'delta: {stateful_out.T[i]-non_stateful_out.T[i]}')\r\n\r\n\r\nnon_stateful_out = stateless_model.predict(x_in).reshape((sequence_length,2))\r\nstateful_out = stateful_model.predict(x_in).reshape((sequence_length,2))\r\nprint_bidi_out(non_stateful_out, stateful_out)\r\n\r\nnon_stateful_out = stateless_model.predict(x_in).reshape((sequence_length,2))\r\nstateful_out = stateful_model.predict(x_in).reshape((sequence_length,2))\r\nprint_bidi_out(non_stateful_out, stateful_out)\r\n\r\nprint('\\n** RESETING STATES in STATEFUL MODEL **\\n')\r\nstateful_model.reset_states()\r\nnon_stateful_out = stateless_model.predict(x_in).reshape((sequence_length,2))\r\nstateful_out = stateful_model.predict(x_in).reshape((sequence_length,2))\r\nprint_bidi_out(non_stateful_out, stateful_out)\r\n```\r\n",
  "closed_by": {
    "login": "qlzh727",
    "id": 5118881,
    "node_id": "MDQ6VXNlcjUxMTg4ODE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5118881?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qlzh727",
    "html_url": "https://github.com/qlzh727",
    "followers_url": "https://api.github.com/users/qlzh727/followers",
    "following_url": "https://api.github.com/users/qlzh727/following{/other_user}",
    "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions",
    "organizations_url": "https://api.github.com/users/qlzh727/orgs",
    "repos_url": "https://api.github.com/users/qlzh727/repos",
    "events_url": "https://api.github.com/users/qlzh727/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qlzh727/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/34055/timeline",
  "performed_via_github_app": null
}
